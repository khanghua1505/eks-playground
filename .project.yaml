config:
  region: <%= env.CDK_AWS_REGION %>
  name: eks-playground

stacks:
  vpc:
    cidr: 10.0.0.0/16
    maxAzs: 2
  eks:
    clusterName: eks-playground
    endpointAccess:
      - 171.252.188.5/32
    nodeGroups:
      - name: General
        os: BOTTLEROCKET
        capacityType: SPOT
        instanceTypes:
          - m5.large
        desiredSize: 1
        maxSize: 2
        taints:
          - effect: PREFER_NO_SCHEDULE
            key: unstable
            value: "True"
    addons:
      vpcCni: {}
      coreDns: {}
      kubeProxy: {}
      eksPodIdentityAgent: {}
      ebsCni: {}
      efsCni: {}
      awsLoadBalancerController: {}
      awsForFluentBit:
        values:
          additionalFilters: |
            [FILTER]
                Name         parser
                Match        kube.*
                Key_Name     log
                Parser       json
                Reserve_Data True
          cloudWatchLogs:
            region: <%= env.CDK_AWS_REGION %>
            logGroupName: fallback_group
            logStreamPrefix: fallback_stream
            autoCreateGroup: true
            logRetentionDays: 7d
            extraOutputs: |
              log_group_template  /aws/eks/eks-playground/namespaces/$kubernetes['namespace_name']
              log_stream_template $kubernetes['pod_name'].$kubernetes['container_name']
      prometheus:
        values:
          alertmanager:
            enabled: false
          prometheus-pushgateway:
            enabled: false
          server:
            defaultFlagsOverride:
              - --enable-feature=agent
              - --storage.agent.retention.max-time=30m
              - --config.file=/etc/config/prometheus.yml
            extraFlags:
              - web.enable-lifecycle
            remoteWrite:
              - url: <%= env.PROMETHEUS_REMOTE_WRITE_URL %>
                sigv4:
                  region: <%= env.CDK_AWS_REGION %>
                queue_config:
                  max_samples_per_send: 1000
                  max_shards: 200
                  capacity: 2500
          serverFiles:
            prometheus.yml:
              rule_files: []
      grafana:
        values:
          ingress:
            enabled: true
            annotations:
              alb.ingress.kubernetes.io/group.name: public
              alb.ingress.kubernetes.io/target-type: ip
              alb.ingress.kubernetes.io/scheme: internet-facing
              alb.ingress.kubernetes.io/healthcheck-path: /api/health
              alb.ingress.kubernetes.io/subnets: <%= env.VPC_PUBLIC_SUBNETS %>
              alb.ingress.kubernetes.io/certificate-arn: <%= env.CERTIFICATE_ARN %>
            hosts: ["grafana.eks.mitom.dev"]
            ingressClassName: alb
